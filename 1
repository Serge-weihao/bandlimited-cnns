Merge branch 'master' of https://github.com/adam-dziedzic/time-series-ml

# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#cc@rtx:~/code/bandlimited-cnns/cnns/nnlib/robustness/pni/code$ cat test_2020-03-06-01-59-37-533036526.txt
nohup: ignoring input
100.0%testing Agg
Using: agg
save path : ./save//svhn_noise_resnet20_robust_160_SGD_3e-4decay_adv-train-008-007-robust-net-cw
{'adv_eval': False, 'adv_train': False, 'arch': 'noise_resnet20_robust', 'attack': 'cw', 'attack_eval': True, 'attack_iters': 200, 'batch_size': 2560, 'data_path': '/home/cc/data/pytorch/cifar10', 'dataset': 'svhn', 'decay': 0.0003, 'epoch_delay': 5, 'epochs': 160, 'evaluate': False, 'fine_tune': False, 'gammas': [0.1, 0.1], 'gpu_id': 0, 'init_noise': 0.08, 'inner_noise': 0.07, 'input_noise': False, 'learning_rate': 0.1, 'manualSeed': 1184, 'model_only': False, 'momentum': 0.9, 'ngpu': 1, 'normalization': False, 'optimizer': 'SGD', 'print_freq': 100, 'resume': '/home/cc/code/bandlimited-cnns/cnns/nnlib/robustness/pni/code/save/svhn_noise_resnet20_robust_160_SGD_adv-train-0.08-0.07-acc-93-21.pth.tar', 'save_path': './save//svhn_noise_resnet20_robust_160_SGD_3e-4decay_adv-train-008-007-robust-net-cw', 'schedule': [80, 120], 'start_epoch': 0, 'use_cuda': True, 'workers': 4}
Random Seed: 1184
python version : 3.6.3 |Anaconda, Inc.| (default, Oct 13 2017, 12:02:49)  [GCC 7.2.0]
torch  version : 1.4.0
cudnn  version : 7603
Downloading http://ufldl.stanford.edu/housenumbers/train_32x32.mat to /home/cc/data/pytorch/cifar10/train_32x32.mat
Downloading http://ufldl.stanford.edu/housenumbers/test_32x32.mat to /home/cc/data/pytorch/cifar10/test_32x32.mat
=> creating model 'noise_resnet20_robust'
CifarResNet : Depth : 20 , Layers for each block : 3
=> network :
 CifarResNet(
  (conv_1_3x3): noise_Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn_1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (stage_1): Sequential(
    (0): ResNetBasicblock(
      (conv_a): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): ResNetBasicblock(
      (conv_a): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): ResNetBasicblock(
      (conv_a): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage_2): Sequential(
    (0): ResNetBasicblock(
      (conv_a): noise_Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): DownsampleA(
        (avg): AvgPool2d(kernel_size=1, stride=2, padding=0)
      )
    )
    (1): ResNetBasicblock(
      (conv_a): noise_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): ResNetBasicblock(
      (conv_a): noise_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (stage_3): Sequential(
    (0): ResNetBasicblock(
      (conv_a): noise_Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): DownsampleA(
        (avg): AvgPool2d(kernel_size=1, stride=2, padding=0)
      )
    )
    (1): ResNetBasicblock(
      (conv_a): noise_Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): ResNetBasicblock(
      (conv_a): noise_Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_a): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_b): noise_Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_b): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (classifier): Linear(in_features=64, out_features=10, bias=True)
)
using SGD as optimizer
=> loading checkpoint '/home/cc/code/bandlimited-cnns/cnns/nnlib/robustness/pni/code/save/svhn_noise_resnet20_robust_160_SGD_adv-train-0.08-0.07-acc-93-21.pth.tar'
=> loaded checkpoint '/home/cc/code/bandlimited-cnns/cnns/nnlib/robustness/pni/code/save/svhn_noise_resnet20_robust_160_SGD_adv-train-0.08-0.07-acc-93-21.pth.tar' (epoch 146)
iters, strength, test accuracy, L2 distortion, Linf distortion, time (sec)
/home/cc/code/bandlimited-cnns/cnns/nnlib/robustness/pni/code/models/noisy_resnet_cifar_robust.py:106: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
200, 0, 0.9320835894283959, 1.2512310697402006e-06, 3.148293890832902e-11, 457.10371828079224
200, 0.0001, 0.9290104486785494, 0.0005561040562402054, 1.6221841860198506e-07, 461.90539169311523
200, 0.0005, 0.9313153042409342, 0.0021965163910681322, 4.923164606387438e-07, 463.5242576599121
200, 0.001, 0.9310079901659496, 0.0037973739906622117, 8.901159869210443e-07, 462.9790458679199
200, 0.005, 0.9279348494161033, 0.014039657846061716, 3.875368323403776e-06, 464.3364522457123
200, 0.01, 0.923939766441303, 0.02598519496603283, 7.221171862520759e-06, 462.6067714691162
200, 0.02, 0.9154502151198525, 0.05022382421079725, 1.4419218075370672e-05, 462.1087772846222
200, 0.03, 0.9064228641671789, 0.07506923016424331, 2.0812003980330625e-05, 461.98767280578613
200, 0.04, 0.8976259987707437, 0.10049225620376592, 2.590326000446913e-05, 463.9127402305603
200, 0.05, 0.885141364474493, 0.12635312341360547, 2.9610967940176347e-05, 462.3517870903015
200, 0.07, 0.8637446220036877, 0.1774414359308004, 3.397723942647042e-05, 462.6873049736023
200, 0.1, 0.8263675476336816, 0.24818732990547554, 3.76990173737843e-05, 461.9013967514038
200, 0.2, 0.701521204671174, 0.4203434078834835, 4.4306152864841864e-05, 461.4942455291748
200, 0.3, 0.6098647818070068, 0.5269348975778594, 4.723790366736085e-05, 462.1549711227417
200, 0.4, 0.5456745543945912, 0.6005566522570557, 4.893201549286189e-05, 461.21186995506287
200, 0.5, 0.500460971112477, 0.6559658902044148, 4.973506627085755e-05, 461.75048422813416
200, 1, 0.367240319606638, 0.819392030657441, 5.1830863762136316e-05, 460.4793527126312
200, 2, 0.27462354025814384, 0.9694007714521548, 5.346792163333061e-05, 460.2129588127136
200, 10, 0.17474646588813766, 1.2561233006122614, 5.435123902269866e-05, 460.95137572288513
200, 100, 0.14716502765826675, 1.4571724290805026, 5.5053100200540535e-05, 459.828245639801
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.
